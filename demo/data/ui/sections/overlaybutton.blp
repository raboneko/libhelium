using Gtk 4.0;
using He 1;

template $DemoOverlayButton : He.Bin {
    hexpand: true;
    vexpand: true;
    child: He.OverlayButton {
        hexpand: true;
        vexpand: true;
        typeb: primary;
        typeb2: secondary;
        icon: "list-add-symbolic";
        secondary-icon: "document-export-symbolic";

        child: Gtk.Box {
            orientation: vertical;
            spacing: 6;
            margin-bottom: 18;

            He.AppBar app_bar {
                show-left-title-buttons: false;
                show-right-title-buttons: true;
                show-back: false;

                viewtitle-widget: He.ViewTitle {
                    label: "Overlay Button";
                };
            }

            Gtk.Box {
                margin-start: 18;
                margin-end: 18;
                orientation: vertical;
                spacing: 12;

                Gtk.Label {
                    ellipsize: end;
                    wrap: true;
                    lines: 5;
                    xalign: 0;
                    label: "Overlay Buttons help people take primary actions. Use an Overlay Button for the most common or important action on an app.";
                }

                He.ViewSwitcher {
                    stack: s;
                    styles ["mini"]
                }

                Gtk.Stack s {
                    vexpand: true;

                    Gtk.StackPage {
                        name: "vala";
                        title: "Vala";

                        child: Gtk.TextView {
                            editable: false;
                            monospace: true;
                            buffer: Gtk.TextBuffer { 
                                text: "var my_overlaybutton = new He.OverlayButton () {\n    typeb: He.TypeButton.PRIMARY,\n    icon: \"list-add-symbolic\"\n};";
                            };
                            styles ["text-view"]
                        };
                    }
                    Gtk.StackPage {
                        name: "blueprint";
                        title: "Blueprint";

                        child: Gtk.TextView {
                            editable: false;
                            monospace: true;
                            buffer: Gtk.TextBuffer { 
                                text: "He.OverlayButton my_overlaybutton {\n  typeb: primary;\n  icon: \"list-add-symbolic\"\n}";
                            };
                            styles ["text-view"]
                        };
                    }
                }
            }
        };
    };
}